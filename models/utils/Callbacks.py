from tensorflow.keras.callbacks import ModelCheckpoint
from keras.callbacks import Callback
from mlflow import log_metrics

def CheckpointCallback(folder):
    """
    It creates a callback that saves the model to a folder called "Checkpoint" in the current directory
    
    :param folder: The folder where the model will be saved
    :return: A function that takes in a folder and returns a ModelCheckpoint object.
    """
    return ModelCheckpoint(filepath=f'{folder}/Checkpoint',verbose=1,save_weights_only=False,save_best_only=True)

class CustomCallback(Callback):
    """
    The `on_epoch_end` method is called at the end of each epoch. It logs the metrics passed to it as a parameter
    """
    def on_epoch_end(self, epoch, logs=None):
        log_metrics(logs,epoch)