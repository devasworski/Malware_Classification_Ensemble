import numpy as np
from preprocessing import bitnet, malvecnet, visnet
from os import path, makedirs
from multiprocessing import Pool
import tqdm

x_data = np.load(f'../data/splits/raw/all_shuffled_train_filenames.npy')

print('(1/3) Process data for MalVecNet:')
if not path.exists(f'../data/MalVecNet/{malvecnet.PROCESS_VERSION}'):
  makedirs(f'../data/MalVecNet/{malvecnet.PROCESS_VERSION}')
def do_malvecnet(x):
  return malvecnet.preprocess(x,origin_folder='../data/BIG_2015/train',dest_folder='../data/MalVecNet')
with Pool(6) as p:
  r = list(tqdm.tqdm(p.imap(do_malvecnet, x_data), total=len(x_data)))

print('(2/3) Process data for BitNet:')
if not path.exists(f'../data/BitNet/{bitnet.PROCESS_VERSION}'):
  makedirs(f'../data/BitNet/{bitnet.PROCESS_VERSION}')
def do_bitnet(x):
  return bitnet.preprocess(x,origin_folder='../data/BIG_2015/train',dest_folder='../data/BitNet')
with Pool(6) as p:
  r = list(tqdm.tqdm(p.imap(do_bitnet, x_data), total=len(x_data)))

print('(3/3) Process data for VisNet:')
if not path.exists(f'../data/VisNet/{visnet.PROCESS_VERSION}'):
  makedirs(f'../data/VisNet/{visnet.PROCESS_VERSION}')
def do_visnet(x):
  return visnet.preprocess(x,origin_folder='../data/BIG_2015/train',dest_folder='../data/VisNet')
with Pool(6) as p:
  r = list(tqdm.tqdm(p.imap(do_visnet, x_data), total=len(x_data)))