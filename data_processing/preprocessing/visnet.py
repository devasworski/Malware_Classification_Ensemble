import numpy as np
import scipy.interpolate as interp
from os import path
from cv2 import resize, INTER_AREA

PROCESS_VERSION = 0

def pad(A, length):
    arr = np.zeros(length)
    arr[:len(A)] = A
    return arr

def bytes_to_images(x):
  bytes = []
  for j in x:
    for i in range(0, len(j) - 1, 2):
      try:
        hex = int(j[i:i+2],16)
        bytes.append(hex)
      except ValueError:
        continue
  x = np.asarray(bytes)
  leg = (512-(len(x)%512))+len(x)
  x = pad(x,leg)
  x = x.reshape(512,-1)
  x = resize(x, (256, 256), interpolation=INTER_AREA)
  return x

def bytes_to_np(file):
    x = (file.read()).replace("\n",'').split(' ')
    RESULT = bytes_to_images(x)
    return RESULT

def preprocess(file_name:str, origin_folder:str, dest_folder:str):
    bytes_path = f"{origin_folder}/{file_name}.bytes"
    pros_path = f"{dest_folder}/{PROCESS_VERSION}/{file_name}.npy"
    if not path.exists(pros_path):    
        f = open(bytes_path, "r", encoding = 'ASCII', errors='ignore')
        output = bytes_to_np(f)
        np.save(pros_path,output)
    else:
        output = np.load(pros_path)
    return output